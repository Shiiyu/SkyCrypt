# This CI Workflow was deployed and configured by WarpWing and Nate.
name: "CI/CD"

on: [push, pull_request, workflow_dispatch]

env:
  NODE_VERSION: "16"

jobs:
  pnpm:
    name: install dependencies (pnpm)
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install node dependencies
        run: pnpm i

  es-lint:
    name: check linting (es-lint)
    needs: [pnpm]
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install node dependencies
        run: pnpm i

      - name: Check ESlint
        run: pnpm lint

  ejs-lint:
    name: check linting (ejs-lint)
    needs: [pnpm]
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install node dependencies
        run: pnpm i

      - name: Check ejs-lint
        run: pnpm lint:ejs

  prettier:
    name: check format (prettier)
    needs: [pnpm]
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install node dependencies
        run: pnpm i

      - name: Check Prettier
        run: pnpm prettier

  typescript:
    name: test compile (typescript)
    needs: [es-lint, ejs-lint, prettier]
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install node dependencies
        run: pnpm i

      - name: Compile TypeScript
        run: npx tsc -p public/resources/ts --noEmit

  rollup:
    name: test compile (rollup)
    needs: [es-lint, ejs-lint, prettier]
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install node dependencies
        run: pnpm i

      - name: Compile Rollup
        run: pnpm rollup

  scss:
    name: test compile (scss)
    needs: [es-lint, ejs-lint, prettier]
    runs-on: ubuntu-latest
    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"

      - name: Install node dependencies
        run: pnpm i

      - name: Build SCSS
        run: pnpm scss

  deploy-production:
    name: deploy (production)
    if: |
      github.ref == 'refs/heads/production'
      && github.repository_owner == 'SkyCryptWebsite'
      && github.event_name != 'pull_request'
    needs: [typescript, rollup, scss]
    runs-on: ubuntu-latest
    steps:
      - name: SSH and Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_KEY }}
          script_stop: true
          script: ~/deploy-production.sh

  deploy-development:
    name: deploy (development)
    if: |
      github.ref == 'refs/heads/development'
      && github.repository_owner == 'SkyCryptWebsite'
      && github.event_name != 'pull_request'
    needs: [typescript, rollup, scss]
    runs-on: ubuntu-latest
    steps:
      - name: SSH and Deploy to Development
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_PORT }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_KEY }}
          script_stop: true
          script: ~/deploy-development.sh
